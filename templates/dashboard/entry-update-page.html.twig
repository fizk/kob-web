{% extends '@layout/admin.html.twig' %}
{% import "partials/form-error.html.twig" as form %}

{% block title %}Home{% endblock %}

{% block style %}
<style>
    .image-list {
        list-style: none;
        padding-left: 0;
    }
    .image-list li {
        margin: 1rem 0;
    }
    .image-list--grid {
        display: grid;
        grid-template-columns: 1fr 1fr;
        grid-gap: 1rem;
        margin: 1rem 0;
    }
    .image-list--grid li {
        margin: 0;
    }

    .list-hidden {
        position: absolute;
        top: -9999px;
        left: -9999px;
    }

    .ghost {
        opacity: .4;
    }

    .form-error {
        list-style: none;
        padding-left: 0;
        width: 100%;
        margin-top: 0.25rem;
        font-size: 80%;
        color: #dc3545;
    }
</style>

{% endblock %}

{% block footer %}
    <div class="row">
        <div class="col">
            <p>
                Entry can be a <em>show</em>, <em>news</em> or <em>project</em>.
                Select the type from the dropdown.
            </p>
            <p>
                Connect an Author to the Entry by searching in the Author textbox and then clicking on the
                name in the list that appears. If the Author doesn't exist you have to create him/her
                <a href="{{ path('create-author') }}" target="_blank">here</a>
            </p>
            <p>
                The body text supports Markdown which is a simple way to add styling to text. A cheat-sheet can be
                found <a target="_blank" href="https://github.com/adam-p/markdown-here/wiki/Markdown-Cheatsheet">here</a>.
            </p>
        </div>
        <div class="col">
            <p>
                Posters and images can be attached by either clicking <em>Select or drag images</em> or by dragging and image
                from the desktop onto the text. You can then add caption to the image, just remember to save the caption
                before you save the entry.
            </p>
            <h4>Markdown</h4>
            <table class="table">
                <thead>
                <tr>
                    <td>format</td>
                    <td>shortcut</td>
                    <td>syntax</td>
                </tr>
                </thead>
                <tbody>
                <tr>
                    <td>bold</td>
                    <td>cmd + b</td>
                    <td>** **</td>
                </tr>
                <tr>
                    <td>italic</td>
                    <td>cmd + i</td>
                    <td>_ _</td>
                </tr>
                <tr>
                    <td>list</td>
                    <td>cmd + l</td>
                    <td>*</td>
                </tr>
                <tr>
                    <td>quote</td>
                    <td>cmd + k</td>
                    <td>&gt;</td>
                </tr>
                <tr>
                    <td>headline 1</td>
                    <td>cmd + 1</td>
                    <td>#</td>
                </tr>
                <tr>
                    <td>headline 2</td>
                    <td>cmd + 2</td>
                    <td>##</td>
                </tr>
                <tr>
                    <td>headline 3</td>
                    <td>cmd + 3</td>
                    <td>###</td>
                </tr>
                </tbody>
            </table>
        </div>
    </div>
{% endblock %}

{% block content %}
    <main class="container">
        <div class="row">
            <div class="col-2">
                {% include '@partials/dashboard-menu.html.twig' %}
            </div>
            <div class="col-10">
                <div class="jumbotron">
                    <div class="row">
                        <div class="col">
                            <h1 class="display-4">
                                {% if entry.id is defined %}
                                    Uppdate Entry
                                {% else %}
                                    Create Entry
                                {% endif %}
                            </h1>
                            {% if entry.id is defined %}
                                <p>
                                    You can also <a href="{{ path('delete-entry', {id: entry.id}) }}" class="btn btn-danger btn-sm">Delete</a>
                                    this Entry, just be careful, this can not be undone.
                                </p>
                            {% endif %}
                        </div>

                    </div>

                </div>
                <form method="post" class="dashboard__form" action="{{ entry.id is defined ? path('save-entry', {id: entry.id}) : path('new-entry', {}) }}">
                    <div class="row">
                        <div class="col">
                            <div class="form-group">
                                <label for="title">Title</label>
                                <input type="text" name="title" class="form-control" id="title" aria-describedby="title" placeholder="Title"  value="{{ entry.title is defined ? entry.title : null}}">
                                {{ form.error('title', messages) }}
                            </div>
                            <template id="author-entry">
                                <li  draggable="true">
                                    <input type="hidden" name="author[]">
                                    <span></span>
                                    <a href="#">(remove)</a>
                                </li>
                            </template>
                            <div class="form-group">
                                <label for="search">Author</label>
                                <author-select onselect="addAuthorEntry(event)"></author-select>
                            </div>
                            <div class='list-hidden'></div>
                            <ul data-author-list>
                                {% if entry.authors is defined %}
                                    {% for author in entry.authors %}
                                        <li draggable="true">
                                            <input type="hidden" name="author[]" value="{{ author.id }}">
                                            <span>{{ author.name }}</span>
                                            <a href="#" onclick="removeAuthorEntry(event)">(remove)</a>
                                        </li>
                                    {% endfor %}
                                {% endif %}
                            </ul>
                        </div>
                        <div class="col">
                            <div class="form-group">
                                <label for="from">From</label>
                                <input type="date" name="from" class="form-control" id="from" aria-describedby="from" value="{{ entry.from is defined ? entry.from : null}}">
                                {{ form.error('from', messages) }}
                            </div>
                            <div class="form-group">
                                <label for="to">To</label>
                                <input type="date" name="to" class="form-control" id="to" aria-describedby="to" value="{{ entry.to is defined ? entry.to : null}}">
                                {{ form.error('to', messages) }}
                            </div>
                            <div class="form-group">
                                <label for="type">Type</label>
                                <select class="form-control" id="type" name="type">
                                    <option value="show" {{ entry.type is defined and entry.type == 'show' ? 'selected' : '' }} >Show</option>
                                    <option value="news" {{ entry.type is defined and entry.type == 'news' ? 'selected' : '' }}>News</option>
                                    <option value="proj" {{ entry.type is defined and entry.type == 'proj' ? 'selected' : '' }}>Project</option>
                                </select>
                                {{ form.error('type', messages) }}
                            </div>
                            <div class="form-group">
                                <label for="orientation">Orientation</label>
                                <select class="form-control" id="orientation" name="orientation">
                                    <option value="h" {{ entry.orientation is defined and entry.orientation == 'h' ? 'selected' : '' }} >Horizontal</option>
                                    <option value="v" {{ entry.orientation is defined and entry.orientation == 'v' ? 'selected' : '' }} >Vertical</option>
                                </select>
                                {{ form.error('orientation', messages) }}
                            </div>
                        </div>
                    </div>

                    <div class="form-group">
                        <label for="body_is">Body Icelandic</label>
                        <textarea data-markdown class="form-control" id="body_is" name="body_is" rows="12">{{ entry.body_is is defined ? entry.body_is : null}}</textarea>
                        <small id="emailHelp" class="form-text text-muted">This field supports <a target="_blank" href="https://help.github.com/en/articles/basic-writing-and-formatting-syntax">markdown</a></small>
                    </div>

                    <div class="form-group">
                        <label for="body_en">Body English</label>
                        <textarea data-markdown class="form-control" id="body_en" name="body_en" rows="12">{{ entry.body_en is defined ? entry.body_en : null}}</textarea>
                        <small id="emailHelp" class="form-text text-muted">This field supports <a target="_blank" href="https://help.github.com/en/articles/basic-writing-and-formatting-syntax">markdown</a></small>
                    </div>

                    <div class="row">
                        <template id="image-entry-template">
                            <li draggable="true">
                                <image-display>
                                    <img class="card-img-top" draggable="false" slot="icon" style="object-fit: cover" height="100" width="100" />
                                    <span slot="control">
                                        <input type="hidden">
                                        <a href="#" onclick="removeImageItem(event)">(remove)</a>
                                    </span>
                                </image-display>
                            </li>
                        </template>
                        <div class="col">
                            <label for="poster">Poster</label>
                            <file-uploader data-file-uploader-poster>
                                <ul class="image-list">
                                    {% if entry.poster is defined and entry.poster.name is defined %}
                                        <li draggable="true">
                                            <image-display  path="{{ path('update-image', {id: entry.poster.id}) }}" text="{{ entry.poster.description }}">
                                                <img class="card-img-top" draggable="false" slot="icon" src="{{ path('asset', {size: '250x100', name: entry.poster.name}) }}" style="object-fit: cover" height="100" width="100" />
                                                <span slot="control">
                                                    <input type="hidden" name="poster[]" value="{{ entry.poster.id }}">
                                                    <a href="#" onclick="removeImageItem(event)">(remove)</a>
                                                </span>
                                            </image-display>
                                        </li>
                                    {% endif %}
                                </ul>
                            </file-uploader>
                        </div>
                        <div class="col">
                            <label for="gallery">Gallery</label>
                            <file-uploader data-file-uploader-gallery>
                                <ul class="image-list image-list--grid">
                                    {% if entry.gallery is defined %}
                                        {% for image in entry.gallery %}
                                            <li draggable="true">
                                                <image-display path="{{ path('update-image', {id: image.id}) }}" text="{{ image.description }}">
                                                    <img class="card-img-top" draggable="false" slot="icon" src="{{ path('asset', {name: image.name, size: '250x100'}) }}" style="object-fit: cover" height="100" width="100" />
                                                    <span slot="control">
                                                        <input type="hidden" name="gallery[]" value="{{ image.id }}">
                                                        <a href="#" onclick="removeImageItem(event)">(remove)</a>
                                                    </span>
                                                </image-display>
                                            </li>
                                        {% endfor %}
                                    {% endif %}
                                </ul>
                            </file-uploader>
                        </div>
                    </div>

                    <button type="submit" class="btn btn-primary">Submit</button>
                    {% if entry.id is defined %}
                        <a href="{{ path('entry', {id: entry.id}) }}">Cancel</a>
                    {% else %}
                        <a href="{{ path('update') }}">Cancel</a>
                    {% endif %}
                </form>
            </div>
        </div>

        <script>
            sortable(document.querySelector('[data-author-list]'), () => {});
            sortable(document.querySelector('[data-file-uploader-poster] > ul'), () => {});
            sortable(document.querySelector('[data-file-uploader-gallery] > ul'), () => {});

            const removeImageItem = (event) => {
                event.preventDefault();
                const parent = event.target.closest('[draggable=true]');
                parent.parentNode.removeChild(parent);
            };

            [{el: '[data-file-uploader-poster]', name: 'poster[]' },
             {el: '[data-file-uploader-gallery]', name: 'gallery[]' }].forEach(config => {
                document.querySelector(config.el).addEventListener('result', (event) => {
                    const list = event.target.querySelector('ul');
                    const template = document.querySelector('#image-entry-template');
                    event.detail.map(item => {
                        const clone = document.importNode(template.content, true);
                        clone.querySelector('input').value = item.id;
                        clone.querySelector('input').name = config.name;
                        clone.querySelector('img').src = item.thumb;
                        clone.querySelector('image-display').path = `/update/image/${item.id}`;
                        list.appendChild(clone);
                    });
                });
            });

            const removeAuthorEntry = (event) => {
                event.preventDefault();
                const parent = event.target.parentNode;

                parent.parentNode.removeChild(parent);

            };
            const addAuthorEntry = (event) => {
                event.preventDefault();

                const template = document.querySelector('#author-entry');
                const clone = document.importNode(template.content, true);

                clone.querySelector('input').value = event.detail.author.id;
                clone.querySelector('span').appendChild(document.createTextNode(event.detail.author.name));
                clone.querySelector('a').addEventListener('click', removeAuthorEntry);

                document.querySelector('[data-author-list]').appendChild(clone);
            };
        </script>
    </main>
{% endblock %}
